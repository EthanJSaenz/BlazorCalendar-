            <!---Calendar-->
            <div class="col-sm-12 col-md-12 col-lg-9">
              <div class="row">
                <div class="col-sm-12 col-lg-2">
                  <select name="" id="" class="fluent-input" @@onchange="SelectYear">
                    @for(int i=2010; i<2025;i++)
                    {
                        <option>@i</option>
                    }
                  </select>
                </div>
                <div class="col-sm-12 col-lg-2">
                  <select name="" id="" class="fluent-input" @onchange="SelectMonth">
                    <option value="1">January</option>
                    <option value="2">February</option>
                    <option value="3">March</option>
                    <option value="4">April</option>
                    <option value="5">May</option>
                    <option value="6">June</option>
                    <option value="7">July</option>
                    <option value="8">August</option>
                    <option value="9">September</option>
                    <option value="10">October</option>
                    <option value="11">November</option>
                    <option value="12">December</option>
                  </select>
                </div>
              </div>
              <table class="calendar-table">
                <thread>
                  <tr>
                    <td>Sun</td>
                    <td>Mon</td>
                    <td>Tues</td>
                    <td>Thurs</td>
                    <td>Fri</td>
                    <td>Sat</td>

                  </tr>
                </thread>
                <tbody>
                  <tr>
                    <td>
                        <!--@DayTemplate(day)---Calendar-->
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>


@code{
    [Parameter]
    public RenderFragment<CalendarDay> DayTemplate{get;set;}

    private int year = DateTime.Now.Year;

    private int month = DateTime.Now.Month;
    private List<CalendarDay> days = new List<CalendarDay>();

    private int RowCount = 0;
    void SelectYear(ChangeEventArgs e)
    {
        year = Convert.ToInt32(e.value.ToString());
        //Refresh Calendar
        RefreshCal();
    }

    void SelectMonth(ChangeEventArgs e)
    {
        month = Convert.ToInt32(e.value.ToSTring());
        //Refresh Calendar
        RefreshCal();
    }

    void RefreshCal()
    {
        days= new List<CalendarDay>();
        //Calc # of empty days
        var firstDay = new DateTime(year,month,1);
        int weekDayNum = (int)firstDayDate.DayOfWeek;
        int numberOfEmptyDays = 0;
        if(weekDayNum == 7)//Sunday
        {
            numberOfEmptyDays = 0;
        }
        else
            numberOfEmptyDays = weekDayNum;
        
        for(int i = 0; i<numberOfEmptyDays;i++)
        {
            days.Add(new CalendarDay
            {
                DayNumber = 0,
                IsEmpty = true
            });
        }

        //Add the month days
        int numberOfDaysMonth = DateTime.DaysInMonth(year, month);

        for(int i =0; i< numberOfDaysMonth;i++)
        {
            days.Add(new CalendarDay
            {
                DayNumber = i+1,
                IsEmpty = false,
                Date = new DateTime(year,month,i+1)
            });
        }

        //Calc # of rows
        int remaining = days.Count % 7;
        if(remaining ==0)
            rowsCount = days.Count /7;
        else
            rowsCount = Convert.ToInt32(days.Count/7)+1;
        Console.WriteLine($"Total Rows: {rowsCount} | Number of Empty Days {numberofEmptyDays} | Month Days {numberOfDaysMonth}");
    }
}